{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\twitter-alike\\\\frontend\\\\src\\\\pages\\\\Feed\\\\TweetBox\\\\TweetBox.js\",\n  _s = $RefreshSig$();\nimport { Avatar, Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport './TweetBox.css';\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetBox = () => {\n  _s();\n  const [post, setPost] = useState('');\n  const [imageURL, setImageURL] = useState('');\n  const handleTweet = e => {\n    e.preventDefault();\n    const userPost = {\n      post: post,\n      photo: imageURL\n    };\n    console.log(userPost);\n\n    // Make sure to handle the response correctly\n    fetch('http://localhost:5000/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userPost)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parse the response as JSON\n    }).then(data => {\n      console.log(data);\n      // Handle the response data as needed\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTweet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(TweetBox, \"S9rPwJzX+isRxKHEeUmqleKpQLQ=\");\n_c = TweetBox;\nexport default TweetBox;\nvar _c;\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"names":["Avatar","Button","React","useState","AddPhotoAlternateOutlinedIcon","jsxDEV","_jsxDEV","TweetBox","_s","post","setPost","imageURL","setImageURL","handleTweet","e","preventDefault","userPost","photo","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","catch","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/twitter-alike/frontend/src/pages/Feed/TweetBox/TweetBox.js"],"sourcesContent":["import { Avatar, Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport './TweetBox.css';\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\n\nconst TweetBox = () => {\n    const [post, setPost] = useState('');\n    const [imageURL, setImageURL] = useState('');\n\n    const handleTweet = (e) => {\n        e.preventDefault();\n        const userPost = {\n            post: post,\n            photo: imageURL\n        };\n        console.log(userPost);\n        \n        // Make sure to handle the response correctly\n        fetch('http://localhost:5000/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userPost),\n        })\n        .then((response) => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json(); // Parse the response as JSON\n        })\n        .then((data) => {\n            console.log(data);\n            // Handle the response data as needed\n        })\n        .catch((error) => {\n            console.error('There was a problem with the fetch operation:', error);\n        });\n    };\n\n    return (\n        <div className=\"tweetBox\">\n            <form onSubmit={handleTweet}>\n                \n            </form>\n        </div>\n    );\n}\n\nexport default TweetBox;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,6BAA6B,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG;MACbP,IAAI,EAAEA,IAAI;MACVQ,KAAK,EAAEN;IACX,CAAC;IACDO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;;IAErB;IACAI,KAAK,CAAC,wBAAwB,EAAE;MAC5BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;IACjC,CAAC,CAAC,CACDU,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZb,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC;MACjB;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdf,OAAO,CAACe,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACzE,CAAC,CAAC;EACN,CAAC;EAED,oBACI3B,OAAA;IAAK4B,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrB7B,OAAA;MAAM8B,QAAQ,EAAEvB;IAAY;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAhC,EAAA,CA1CKD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}